<Window x:Class="PiwotOBSDeck.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PiwotOBSDeck"
        mc:Ignorable="d"
        Title="PiwotOBSDeck" Height="526" Width="624" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="CheckBoxStyleBig" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="0,0,0,-13">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Height="21" Width="20">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>


        <StackPanel Grid.Column="1">
            <GroupBox Name="groupBox_Connections"  Header="Connections" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2" Width="200">
                <StackPanel VerticalAlignment="Top">
                    <GroupBox Name="groupBox_connectionsOBS" Header="Obs" VerticalAlignment="Top" Margin="2" BorderBrush="Gray" Background="LightGray">
                        <StackPanel>
                            <Button Content="Connect to OBS" Margin="2" VerticalAlignment="Top" Height="27" Name="ButtonConnect" Click="ButtonConnect_Click" />
                            <Button Content="Autoconnect" Margin="2" VerticalAlignment="Top" Height="27" Name="ButtonAutoConnect" Click="ButtonAutoConnect_Click"/>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Status: "/>
                                <TextBlock Name="textBlock_OBSConnectionStatus" Text="disconnected"/>
                            </StackPanel>
                            <Button Content="Dump scenes to file" Margin="2" VerticalAlignment="Top" Height="26" x:Name="ButtonDumpScenesToFile" Click="ButtonDumpScenesToFile_Click" Grid.ColumnSpan="2"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Name="groupBox_connectionsDonations" Header="Donations" VerticalAlignment="Top" Margin="2" BorderBrush="Gray" Background="LightGray">
                        <StackPanel>
                            <Button Name="button_toggleDonations" Content="Toggle connection" Margin="2" VerticalAlignment="Top" Grid.ColumnSpan="2" Click="button_toggleDonations_Click" Height="24"/>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Status: "/>
                                <TextBlock Name="textBlock_DonationConnectionStatus" Text="disconnected"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
            <GroupBox Name="groupBox_Trash"  Header="Trash" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2" Width="200" IsEnabled="False">
                <StackPanel VerticalAlignment="Top">
                    <Button Content="RALSEI" Margin="2" VerticalAlignment="Top" Height="24" Name="ButtonJumpscare_Copy" Click="ButtonJumpscare_Click"  FontSize="18" FontFamily="Chiller" FontWeight="Bold" Foreground="#FFCE1414" Grid.ColumnSpan="2"/>
                    <Button Content="RALSEI2" Margin="2" VerticalAlignment="Top" Height="24" Name="ButtonJumpscare2" Click="ButtonJumpscare2_Click"  FontSize="18" FontFamily="Chiller" FontWeight="Bold" Foreground="#FFCC00BB" Grid.Column="1"/>
                    <Button Content="Chirp! :D" Margin="2" VerticalAlignment="Top" Height="24" Name="ButtonChirp" Click="ButtonChirp_Click"/>
                    <Button Content="DVD" Margin="2" VerticalAlignment="Top" Height="24" Name="ButtonDVD" Click="ButtonDVD_Click"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="DVD speed: " Margin="2,2,0,1"/>
                        <TextBox Name="textBox_dvdSpeed" MinWidth="30" VerticalAlignment="Bottom" Text="10" KeyUp="textBox_dvdSpeed_KeyUp" TextChanged="textBox_dvdSpeed_TextChanged" TextAlignment="Right"/>
                        <TextBlock Text="px/frame" Margin="2,2,0,1"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Column="2">
            <GroupBox Name="groupBox_VTuber" Header="V-Tuber" Margin="2" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" IsEnabled="False">
                <StackPanel VerticalAlignment="Top">
                    <GroupBox Header="Voice">
                        <StackPanel>
                            <Button Content="Toggle voicemeter" Margin="2" VerticalAlignment="Top" Height="27" Name="ButtonVoiceToggle" Click="ButtonVoiceToggle_Click" Grid.Column="1"/>
                            <local:SerieDisplay Margin="2" x:Name="VoiceDisplay" BorderThickness="1,1,1,1" UpdateInterval="33" Grid.Column="1" Height="40" HorizontalAlignment="Stretch" Width="172">
                                <local:SerieDisplay.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}"/>
                                </local:SerieDisplay.BorderBrush>
                                <local:SerieDisplay.Background>
                                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}"/>
                                </local:SerieDisplay.Background>
                            </local:SerieDisplay>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Slider x:Name="slider_voiceVolume" Value="500" Maximum="1000" SmallChange="10" LargeChange="10" Grid.Column="0" ValueChanged="slider_voiceVolume_ValueChanged"/>
                                <TextBlock x:Name="textBlock_voiceVolume" HorizontalAlignment="Right" Margin="0,0,4,0" Grid.Column="1">Vol: 100%</TextBlock>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Avatar">
                        <StackPanel>
                            <GroupBox Header="Main" Name="groupBox_vtuberAvatarMain" BorderBrush="Gray" Background="LightGray">
                                <StackPanel>
                                    <Button Content="Toggle avatar" Margin="2" VerticalAlignment="Top" Height="27" Name="ButtonToggleAvatar" Click="ButtonToggleAvatar_Click" Grid.Column="1"/>
                                    <Button Name="button_loadAvatar" Content="Load avatar" Margin="2" VerticalAlignment="Top" Height="24" Grid.Column="1" Click="button_loadAvatar_Click"/>
                                    <Button Name="button_saveAvatar" Content="Save avatar" Margin="2" VerticalAlignment="Top" Height="24" Grid.Column="1" Click="button_saveAvatar_Click"/>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Beer">
                                <StackPanel>
                                    <Button Content="Once" Margin="2" VerticalAlignment="Top" Height="24" Name="ButtonBeer" Click="ButtonBeer_Click"/>
                                    <Button Content="Toggle loop" Margin="2" VerticalAlignment="Top" Height="24" Name="ButtonBeer_Loop" Click="ButtonBeer_Loop_Click"/>
                                    <StackPanel Orientation="Horizontal" Margin="2">
                                        <TextBlock Text="Status: loop "/>
                                        <TextBlock Name="textBlock_BeerLoopStatus" Text="off"/>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Column="3">
            <GroupBox Header="Donations" Width="200">
                <StackPanel>
                    <GroupBox Header="Donation popup">
                        <StackPanel>
                            <CheckBox Name="checkBox_enableMultilang" Content="Enable multi-lang" Margin="2" Checked="checkBox_enableMultilang_Checked"/>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Donation in queue: "/>
                                <TextBlock Name="textBlock_donationQueueValue" Text="0"/>
                            </StackPanel>
                            <Button Content="Pause queue" Margin="2" VerticalAlignment="Top" Height="24" Name="button_pauseDonations" Click="button_pauseDonations_Click"/>
                            <Button Content="Skip" Margin="2" VerticalAlignment="Top" Height="24" Name="button_skipDonate" Click="button_skipDonate_Click"/>
                            <TextBlock Text="Scene:" Margin="2,2,2,0"/>
                            <ComboBox Name="comboBox_donationScenes"  Margin="2,0,2,0" VerticalAlignment="Top" Height="22" d:ItemsSource="{d:SampleData ItemCount=5}" SelectionChanged="comboBox_donationScenes_SelectionChanged"/>
                            <TextBlock Text="Text:"  Margin="2,2,2,0"/>
                            <ComboBox Name="comboBox_donationTexts" Margin="2,0,2,2" VerticalAlignment="Top" Height="22" d:ItemsSource="{d:SampleData ItemCount=5}" SelectionChanged="comboBox_donationTexts_SelectionChanged"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Goal">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Goal value: " Margin="2,2,0,1"/>
                                <TextBox Name="textBox_goalTargetValue" MinWidth="30" VerticalAlignment="Bottom" Text="1000" KeyUp="textBox_goalValue_KeyUp" TextChanged="textBox_goalTargetValue_TextChanged" TextAlignment="Right"/>
                                <TextBlock Text="zł" Margin="2,2,0,1"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Goal progress: " Margin="2,2,0,1"/>
                                <TextBox Name="textBox_goalProgressValue" MinWidth="30" VerticalAlignment="Bottom" Text="0" KeyUp="textBox_goalProgress_KeyUp" TextChanged="textBox_goalProgressValue_TextChanged" TextAlignment="Right"/>
                                <TextBlock Text="zł" Margin="2,2,0,1"/>
                            </StackPanel>
                            <ProgressBar Name="progressBar_goal" Height="10" Margin="2" Maximum="100" Value="0" MouseMove="progressBar_goal_MouseMove" MouseLeftButtonDown="progressBar_goal_MouseLeftButtonDown"/>
                            <TextBlock Text="Scene:" Margin="2,2,0,0"/>
                            <ComboBox Name="comboBox_goalnScenes"  Margin="2,0,0,0" VerticalAlignment="Top" Height="22" d:ItemsSource="{d:SampleData ItemCount=5}" SelectionChanged="comboBox_goalnScenes_SelectionChanged"/>
                            <TextBlock Text="Text:"  Margin="2,2,0,0"/>
                            <ComboBox Name="comboBox_goalTexts" Margin="2,0,0,0" VerticalAlignment="Top" Height="22" d:ItemsSource="{d:SampleData ItemCount=5}" SelectionChanged="comboBox_goalTexts_SelectionChanged"/>
                            <TextBlock Text="Bar:"  Margin="2,2,0,0"/>
                            <ComboBox Name="comboBox_goalBar" Margin="2,0,0,0" VerticalAlignment="Top" Height="22" d:ItemsSource="{d:SampleData ItemCount=5}" SelectionChanged="comboBox_goalBar_SelectionChanged"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </Grid>
</Window>
